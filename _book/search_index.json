[["index.html", "A Minimal Book Example Introduction 0.1 Objectif 0.2 Les données du projets 0.3 Description des données", " A Minimal Book Example John Doe 2022-05-19 Introduction L’assurance est une opération de risque d’un assuré à un assureur. Cette opération de transfert se fait par un paiement de prime par l’assuré à l’assureur. Ce dernier s’engage à indemniser son client en cas de survenance d’un sinistre pendant toute la période couverte par le contrat. La prime reçue par l’assureur doit refléter le risque qu’il est prêt à couvrir d’où la nécessité de se demander combien faut-il recevoir en prime pour assurer \\(\\lambda\\) niveau de risque ? 0.1 Objectif Dans ce projet, nous allons faire une étude sur des données que nous décrirons plus tard. Le but est d’appliquer différentes méthodes vues en assurance non-vie et de ressortir le meilleur modèle de tarification. Bien sûr nous allons commencer par une étude statistique de nos données ainsi qu’un ensemble de représentations graphiques. 0.2 Les données du projets Cette base de données contient 16082 images d’une assurance automobile. (Télécharger). Le code suivant permet de charger les données qui se trouvaient au préalable dans le dossier Data. library(haven) database &lt;- read_sas(&quot;Data/base5.sas7bdat&quot;, NULL) knitr::kable( head(database[,1:8], 10), booktabs = TRUE, caption = &#39;A table of the first 10 rows of our data.&#39; ) Table 0.1: A table of the first 10 rows of our data. NAP PERMIS DEB_IMAG FIN_IMAG SEX STATUT CSP USAGE 83 332 2004-01-01 2004-02-01 M A 50 3 916 333 2004-02-01 NA M A 50 3 550 173 2004-05-15 2004-12-03 M A 50 2 89 364 2004-11-29 NA F A 55 2 233 426 2004-02-07 2004-05-01 M A 60 1 666 429 2004-05-01 NA M A 60 1 80 461 2004-04-02 2004-05-01 M A 48 3 666 462 2004-05-01 NA M A 48 3 173 405 2004-10-29 NA F A 50 2 474 386 2004-01-01 2004-06-22 M A 55 2 0.3 Description des données Évidemment, il est très difficile de comprendre certaines abréviations dans les données que nous venons de télécharger. Ne vous inquiétez surtout pas ! Le tableau suivant contient la description de chaque colonne de la base 5 que nous appellerons dorénavant database. Table 0.2: Descriptions de database. Description Code age du conducteur agecond ancienneté de permis permis sexe du conducteur sex statut matrimonial statut catégorie socio-professionnelle csp usage du véhicule usage option kilométrage limité k8000 zone géographique zone coefficient de réduction majoration (bonus/malus) RM date de début d’image deb_imag date de fin d’image fin_imag nombre d’années-police nap nombre de sinistres responsables dans les 4 années précédent l’image sinap1 nombre de sinistres non responsables dans les 4 années précédent l’image sinap2 nombre de sinistres parking dans les 4 années précédent l’image sinap3 nombre de sinistres incendie/vol dans les 4 années précédent l’image sinap4 nombre de sinistres bris de glace dans les 4 années précédent l’image sinap5 nombre de mises en demeure dans les 4 années précédent l’image sinap6 charge de sinistres charge Passons maintenant à l’étude statistique ! "],["etudestats.html", "Chapter 1 Études statistiques 1.1 Tests statistiques", " Chapter 1 Études statistiques Cette partie de ce document sera consacrée à l’étude statistique de notre jeu de données. Pour commencer nous allons calculer la somme totale des sinistres par police. library(haven) database &lt;- read_sas(&quot;Data/base5.sas7bdat&quot;, NULL) library(dplyr) database$SumSINAPS &lt;- database %&gt;% select(starts_with(&quot;SINAP&quot;)) %&gt;% apply(., 1, sum) Nous venons de créer avec le code précédent une nouvelle colonne dans la base de données data que nous avons appelé SumSINAPS. On peut facilement faire un sommaire de la somme des sinistres avec la fonction summary afin de connaître les mesures de tendance de cette variable. summary(database$SumSINAPS) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.000 0.000 1.000 1.385 2.000 12.000 1.1 Tests statistiques Nous allons faire des testes statistiques histoire de connaître quelle loi suit la somme totale des sinistres SumSINAPS 1.1.1 Tests d’adéquation Les tests d’adéquation servent à tester si un échantillon est distribué selon une loi de probabilité donnée. Ils permettent de décider, avec un seuil d’erreur \\(\\alpha\\) spécifié, si les écarts présentés par l’échantillon par rapport aux valeurs théoriques attendues sont dûs au hasard ou sont au contraire significatifs. Pour faire les tests, nous allons générer une variable aléatoire \\(X\\) suivant une loi choisie, puis tester si la somme totale des sinistres SumSINAPS est de même loi. SumSINAPS &lt;- database$SumSINAPS 1.1.1.1 Loi de poisson #Generer une v.a de longueur indentique a celle de SumSINAPS et suivant la loi de poisson X=rpois(length(SumSINAPS),mean(SumSINAPS)) #test de poisson ks.test(SumSINAPS,X) ## Warning in ks.test.default(SumSINAPS, X): p-value will be approximate in the ## presence of ties ## ## Asymptotic two-sample Kolmogorov-Smirnov test ## ## data: SumSINAPS and X ## D = 0.061311, p-value &lt; 2.2e-16 ## alternative hypothesis: two-sided La \\(p\\)-\\(value\\) est inférieure à \\(0.5\\) donc on rejette l’hypothèse \\(H_0\\) selon laquelle la somme des sinistres suit une loi de poisson. 1.1.1.2 Loi normale On peut tester graphiquement si une variable suit une loi normale avec la fonction qqnorm. Si le nuage de point s’apparente à une droite alors la variable pourrait suivre une loi normale sinon on rejette cette hypothèse. qqnorm(SumSINAPS) Il est très difficile de conclure à partir d’un graphe qqnorm si une variable pourrait effectivement suivre une loi normale. D’ailleur c’est pourquoi il est préférable d’utiliser le test de normalité de Carlos Jarque et Anil K. Bera appelé Jarque–Bera test. Sur R, ce test peut être effectué avec la fonction jarque.bera.test() disponible dans le package tseries. \\(\\begin{cases} H_0: Les\\; résidus\\; suivent\\; une\\; loi\\; normale\\\\ H_1: Les \\;résidus\\; ne\\; suivent\\; pas\\; une\\; loi\\; normale \\end{cases}\\) #install.packages(&quot;tseries&quot;) library(tseries) ## Registered S3 method overwritten by &#39;quantmod&#39;: ## method from ## as.zoo.data.frame zoo jarque.bera.test(SumSINAPS) ## ## Jarque Bera Test ## ## data: SumSINAPS ## X-squared = 8625.6, df = 2, p-value &lt; 2.2e-16 Le test précédent indique que la \\(p\\)-\\(value\\) est inférieure largement à \\(0.5\\), on rejette alors l’hypothèse \\(H_0\\) de normalité de SumSINAPS avec un niveau de confiance de \\(95%\\) "],["représentations-graphiques.html", "Chapter 2 Représentations graphiques", " Chapter 2 Représentations graphiques Dans cette partie du projet, nous allons effectuer un ensemble de représentations graphiques afin de savoir l’impact des variables sur les sinistres. Ce graphe suivant indique la fréquence des sinistre en fonction des differentes variables : sexe, zone, catégorie socio-professionnelle, age, usage du véhicule et statut matrimonial. library(dplyr) library(ggplot2) B1 = database %&gt;% select(SEXE = SEX,STATUT,ZONE,CSP,USAGE,AGECOND) #selection des variables. plot_ &lt;- function(df, N){ name = names(df) for (i in name){ df0 &lt;- data.frame(df[[i]],N) # Creation d&#39;une df(Variables,N) colnames(df0) &lt;- c(i,&#39;N&#39;) s &lt;- df0 %&gt;% group_by(colonne = df0[[i]]) %&gt;% summarise(total = sum(N)) # Creation d&#39;une df(groupe de Variables, Total) # debut du code pour la figure figure &lt;- ggplot(data = s, aes(x = colonne, y = total/sum(total))) + geom_col() + xlab(i) + # Ajout du label de x ylab(paste0(&quot;Frequence &quot;,i)) + # Ajout du label de y hrbrthemes::theme_ipsum(grid = &quot;Y&quot;) # Ajout d&#39;un theme pour la figure # fin du code pour la figure assign(paste0(&quot;fig&quot;,i),figure,.GlobalEnv) #assigantion de la figure i } } plot_(B1,SumSINAPS) # Execution de la fonction precedente library(patchwork) (figSEXE|figUSAGE)/figAGECOND (figSTATUT|figZONE)/figCSP "],["parts.html", "Chapter 3 Parts", " Chapter 3 Parts You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "Chapter 4 Footnotes and citations 4.1 Footnotes 4.2 Citations", " Chapter 4 Footnotes and citations 4.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one 1. 4.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2022) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References "],["blocks.html", "Chapter 5 Blocks 5.1 Equations 5.2 Theorems and proofs 5.3 Callout blocks", " Chapter 5 Blocks 5.1 Equations Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{5.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (5.1). 5.2 Theorems and proofs Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 5.1. Theorem 5.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 5.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["sharing-your-book.html", "Chapter 6 Sharing your book 6.1 Publishing 6.2 404 pages 6.3 Metadata for sharing", " Chapter 6 Sharing your book 6.1 Publishing HTML books can be published online, see: https://bookdown.org/yihui/bookdown/publishing.html 6.2 404 pages By default, users will be directed to a 404 page if they try to access a webpage that cannot be found. If you’d like to customize your 404 page instead of using the default, you may add either a _404.Rmd or _404.md file to your project root and use code and/or Markdown syntax. 6.3 Metadata for sharing Bookdown HTML books will provide HTML metadata for social sharing on platforms like Twitter, Facebook, and LinkedIn, using information you provide in the index.Rmd YAML. To setup, set the url for your book and the path to your cover-image file. Your book’s title and description are also used. This gitbook uses the same social sharing data across all chapters in your book- all links shared will look the same. Specify your book’s source repository on GitHub using the edit key under the configuration options in the _output.yml file, which allows users to suggest an edit by linking to a chapter’s source file. Read more about the features of this output format here: https://pkgs.rstudio.com/bookdown/reference/gitbook.html Or use: ?bookdown::gitbook "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
